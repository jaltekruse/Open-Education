Open Education dev log

Running bug list
----------------
- when using the menu option to change page alignment (left, center, right) the selected
  object overlay (such as when editing an expresison) is not redrawn until the object is de-selected
  and re-selected
- on mac
    - resizing window does not trigger a re-layout/redraw event, looks quite broken until you scroll
- auto-center on maximize if the screen is large enough
    - alight right default was mostly because I developed this on a small screen
    - the align center happens too aggressively (I think the popup menu might be wider on mac)
    - also the menu option at the top still says align right after the automatic switch to center
- check for unsaved changes seems to be broken (on mac at least)
    - INVESTIGATE THIS SOON
    - might have something to do with the half-application half applet design
- when a new line is added upon modifying an expression if the expression is in a group,
  the boundary of the group is not updated
- java.lang.RuntimeException: could not find an object GUI for the type, class doc.mathobjects.Grouping
	at doc_gui.PageGUI.getGUIForObj(PageGUI.java:208)
- when selecting an individual aobject that is within a persistent group
	- resizing the object does not prompt a group resize
	- however moving it does prompt a group resize
		- feel like I've solved a few bugs like this
		- and there is another outstanding one for adding a step onto an equation
		  also does not prompt a resize
	- should create a way to classify all actions that can change the size/position
	  of an object and make sure that they prompt a common codepath to make the group resize
	  itself
- consider replacing rectangle collision for groups with a check for collision with any of the
  contained objects
- consider replacing rectangle collisions for non-rectanglular objects with better collision polygons
	- related to also highlighting objects with non-rectangular blue lines when in groups
		- might not want to always share polygons between draweing and collision
		- need to look for circle collision, or do a n-gon collision while still drawing a circle/oval
		  so it doesn't look weird
		- otherwise for the most part I could just share the collision polygon with what is going
		  to be drawn in a blue line
		  	- examples triangle, trapezoid arrow, etc.
- number line cannot be expanded to the left
	- only can move
- improve generating auto-resized grid
	- for graphs as well as number line
- fix keyboard shortcuts on mac
- make the answer key button toggle a view mode, not generate a new doc
	- make sure teachers can re-generate problems in this view if the questions have
	  answers with unclean fractions, or other undesired properties
- Expression rendering varies greatly based on zoom level
	- can cause a lot of ugly overlaps or whitespace as the font measurements and other scaling
	  changes dramatically depending on how it is scaled
	- need to add tests to make sure that the rendering is verified at various scale sizes
- minor issue with zoom
	- on a fresh doc (application instance?), zooming all the way in does not trigger a re-draw event on the last
	  allowed zoom-in
		- clicking on the doc causes a redraw event and the last level of zooming in is shown
		- so the state change did actually apply, its just not being drawn

Running cleanup/TODO
--------------------
- convert expression parsing to ANTLR
- move various tree traversals to visitor pattern
- UNIT TESTS
    - most important tests all of the backend
        - where it is dependent on some front-end replace direct interface
          with a wrapper that can be mocked
            - Example : measuring text currently requires the GUI
                - I think I got around this by creating an image and
                  opening up a drawing context for it, can use this
                  same strategy for setting up the unit tests
                - can even check expression layout with this method
                - would be worth have an automated exact pixel check
                - as well as writing a basic interface to view
                  the expected layouts against the current generated
                  ones visually to approve major refactorings
- every time I adjust something with zoomLevel
    - is the rounding consistent when going back to pixels?
    - seeÂ DocViewerPanel.docPt2PanelPt
- clarify paste behavior
    - don't require page selection
- consider removing page selection all together
    - make it only happen when a user wants to add or delete a page
    - it just confuses people when the whole page turns blue
    - word processors do not have a delete page feature
- shove everything down command
    - allows for adding a new section to a large document
    - or moving content in general
- consider doing automatic layout
    - absolute layout for diagrams in special drawing/diagram areas
        - like MS office text boxes
    - otherwise UI could be simplified and streamlined, just switch between text and
      math modes
    - almost like a GUI latex editor
        - make smart defaults, don't make everything a manual process
            - allow expressions to appear in a sentence
            - if a user creates a multi-line expression separate it from the text
              and center it
                - as is done in Latex docs often
- ObjectProertiesFrame
    - get rid of all the hacks
    - keyboard shortcuts
        - currently have custom code in ObjectPropertyFrame creation
          to add the keyboard listener to the relevant panel to allow
          keyboard shortcuts to be used immediately after switching
          to the solve tab (without clicking on the document again)
		- this could possibly be refactored to put the keyboard shortcuts
		  registered somewhere more global

-------------
3/14/2015
-------------
- spent a few hours fighting with Codeigniter
    - could not get sign in working on site again
- get the database set up
- debugged through the router, found a fix to the issue
  that it was re-routing to user/classes -> auth/login
    - then there was a redirect loop
    - rage quit
        - best thing to do in the future is probably 
          start with a fresh CodeIgnighter (I have played
          around in the path to get rid of the index.php in
          the URL among other things)
        - from there I can try to re-apply the application
          files into a clean installation
        - could look into upgrading to version 3.0

-------------
3/15/2015
-------------
- working on OpenNotebook today
- overall project roadmap
    - try to get the pivot I worked on last year at 3ds put together
    - focus on student interface, as well as teacher grading/overview
    - de-emphasize or completely remove classroom content generation
- goals
    - test out interface for a while, taking notes about biggest
      annoyances in regards to the interface for solving problems
        - cannot use expression modifications keyboard shortcuts after
          clicking on solve tab
            - fixed - added a NotebookKeyboardListener to the second pane
              if the ObjectPropertiesFrame is being made for an
              ExpressioObject
        - substituting multiple variables is a pain
        - need to have one poup to substitue multiple at once
            - can use the list interface (once I can put objects in a 
              menu-ediatable list)
            - to make it mouse free
                - tab always brings you to the next thing
                    -  | var input | = | val input |
                    - tab brings you to the next input box
                        - or if you are in th last val input adds another
                    - enter submits
                    - make users type x= into a single box with val?
                        - would this be simpler or more complicated
                        - code both, have people try it out
    - replace the parser with ANTLR
    - get the cursor integrated with the backend expression representation
    - serialize 

=======================
work on 8/22/2015
=======================
- focus today
	- don't think about the website at all
	- how can I make the application useful on its own
	- focus on making problem formulas more useful
	- improve student algebra equation editor
	- improve overall UX
		- allow proper multiple object selection 
		- remove page selection when clicking whitespace
			- only enable after choosing to delete a page and prompt
			  user to click on page to delete
			- then prompt to confirm desire to delete
		- don't paint the entire rectangle behind an expression and solution steps
			- only fill in the rectangle behind particular expressions
			- adjusting other objects' layering can help
			- but when selecting the equation to edit it again it will cover whatever
			  is on top of it when it is active
		- disable x point selection (vertical yellow line) on graph
			- or finish it to take mouse drag events and allow for range selection
		- detecting recent changes to prompt saving on attempted shutdown is also broken on linux
			- appears to only be on application close
			- trying to close an unsaved tab still warns appropriately
			- *partial resolution*
				- this only happens when running as an applet, when running as an application
				  this works fine
				- need to confirm this on mac, think it is likely the case that it also works there

===============
9/8/2015
===============
- looking at how to write unit tests in CodeIgniter
	- https://vimeo.com/28588831
	- http://jensroland.com/projects/toast/
	- http://taiar.github.io/php/2013/11/08/testing-codeigniter-applications-with-phpunit.html
	- https://github.com/fmalk/codeigniter-phpunit
	- http://www.codeigniter.com/user_guide/libraries/unit_testing.html
- error running CodeIgnighter the first time
	- Message: PHP Startup: Unable to load dynamic library '/usr/lib/php5/20090626/mcrypt.so' - /usr/lib/php5/20090626/mcrypt.so: cannot open shared object file: No such file or directory
	- install missing stuff
		- http://stackoverflow.com/questions/10565521/error-in-php5-unable-to-load-dynamic-library
- 


=========================
Notes from Alyssa testing
=========================
- update teacher tutorial to talk about properties frame
- update instructions for new 'fill color' interface on shapes
- flip the content of the tutorial
	- start out with math stuff first
		- maybe a few problem formulas to show regeneration
		- and asking them to step-by-step solve an algebra problem
	- then move on to managing/arranging content on the docs
- typos
	- toolar
	- open the xml in an editor for now to fix typos
	- TODO - implement spell-check in the application
- bringing object off screen and then back brings it to the front
- groups selection, typo 'the several'
- clarify - button with solid square around 3 objects
- this tutorial takes a long time to read
	- maybe just cover critical stuff
	- make it interesting, cover all the math stuff
	- make a few other tutorials, advanced document creation/layout
	- make a clearer problem generation tutorial
- arrangement (all to left/right/top) buttons that cause a
  group to become overlapped are confusing
- remove page selection (details covered elsewhere in the notes above)
- student answer box should not turn green
	- *fixed*
- explain how to make answer box
- explain how to make a graph
- branded logo, not java
- talk about math keyboard in tutorial
	- cramped on OSX
	- can it always be on top?
- randomInt is confusing
	- might want to make an advanced tab
	- or wait and let the auto-complete feature fix this
		- would allow for inline explanations of functions in dropdown
		  search results
- 'add new' button is confusing
	- on graph it means new equations
	- on expression there is an add new button for the list of correct answers
		- each list should probably go in a new tab
		- or at least visually separated with a box around the list
- enhance answer box for different types of questions
	- word or sentence
	- math expression
	- multiple choice
	- matching
	- true/false
- Consistent capitalization on buttons
- focus on object frame disables keyboard shortcuts
	- *fixed* - just registering the keyboard listener on the properties frame
	- may want to look for a better way to do this
- add a note about the keyboard shortcuts on the properties frame
- "it should tab"
	- going from one problem to the next should be easier
	- completely mouseless operation when possible
- warn users to be careful about case sensitivity in equations
- keyboard shortcuts for math symbols
- (a*a)/a = 2a/a -> Combine like terms
	- (aa1)/a = (2a1)/a
- not as easy for students to guess an answer
  as other systems
- good limits on what comp does for them
	- limiting combine like terms and other features for some users
- determine paste page by current view or selected object
	- related to removing page selection
- group movement was broken by my fix for moving an object within a group
	- I think this is fixed
- fix the scrolling when adding a new element to a list in the props frame
	- this also moved/resizes the window which is confusing
- make the properties frame simpler by suing more tabs to sort things and
  hide other functionality
- the tall frame for a graph makes working with the keyboard hard
- application creates really small buttons on screens with high pixel density
	- like Alyssa's surface tablet
	- make buttons bigger, even if for now that just means stretching the images and
	  making them grainier
	- can pixel density be detected from JAVA?
- randomInt
	- help text to say it takes two parameters
- disable randomInt on graphs
- non-stable graphs can change how they render when resizing the graph object
	- resizing currently changes the sampling rate when drawing the graph
	- this should be changed to be consistent so a graph will be the same regardless of
	  the graph object size of document zoom level
- 
